# 자바스크립트의 계열화
	1. 웹에 대한 이해
	2. 웹개발에서 자바스크립트의 위치와 기능
		1) 서버와의 관계에서 실행 지점
			- 소스는 서버
			- 실행을 브라우저에 실행(node 등 최근에는 서버에서 실행하여 전달하는 경우도 있음)
		2) 서버 프로그램(jsp)과 javascript의 연동	
		3) ajax통해서 비동기적으로 서버에 데이터 받아서 javascript 처리.
		4) 에러 트래킹
		-ctrl+s저장 후, 브라우저 화면 F5로 적용 --> 브라우저 F12 console메뉴를 통해서 에러라인 확인 ==>앞뒤코드확인
		- 소스변경 ==> ctrl+s저장 ==> 브라우저 f5로 확인
		#해당내용으로 에러가 보이는 경우가 있기도하지만,
		초기(앞라인)에 다른 기능에 오류가 난 경우 전체적으로 실행이 되지않는다.
		
	3. 프로그래밍 공통
		1) 변수
			var,let,const
			ex) var num01=25; var name="홍길동"
		2) 데이터 유형
			- 종류 : 숫자형(number),문자열형(string),함수형(function),
					boolean형(true,false),객체(object)
					
			- 형변환 : 자유롭게 데이터 변환이 일어난다.
				"25"*"3" ==>75
				"25"+"3"==>254
				25+3=>28
				
				명시적 변환 함수
				Number("25")+parseInt("30")+parseFloat("5.5")
				==>60.5
		3) 조건문/반복문
			if(){}, for(var idx=0;idx<30;idx++){}
			for(var idx in arry){ //배열일 때
				idx,arry[idx]     idx0시작하는데 문자열"0","1"...
									arr['0'] arr['1'] arr['2']
			}
			for(var prop in obj){ //객체일때. {name:"홍길동",age:25}
				prop,obj[prop]         prop ==> name,age,
										obj[prop] ==>p01
			}
			for(var ele of arry){ //자바의 for(String one:arry)
			}
		4) 배열형 데이터
	4. 함수처리
		1) 내장형 함수
		 setInterval(반복할 시간, function(){반복할 내용})
		 setTimeout(시간, function(){시간 이후에 처리할 내용})
		 형변환함수
		2) 사용자 정의 함수
			function 함수명(){}
			var 함수명 = function(){}
			
			함수명();
		3) argument : 매개변수를 배열로 받아서 처리해주는 객체
		4)  function 함수명(가변변수..){
			가변변수: 매개변수를 가변적으로 받아 처리해줌
			}
		5) function 함수1(){}
			funrction함수2(변수1){
				변수1(); 매개변수를 함수로 전달될때, 해당블럭안해서 함수로 활용
			}
			함수2(함수1); 함수를 매개변수로 전달할 수 있다.
	5. 객체형 데이터 
   1) 내장형 객체
      Math 수학적 함수 .. 
   2) 사용자 정의 객체
      function 객체명(매개변수1, 매개변수2....){
         this.속성명 = 매개변수 1;
         this.메서드명 = function(){
         
         }
      }
      var 참조명 = new 객체명(데이터1, 데이터2);
      참조명, 메서드명();
      
      class 객체명{
         constructor(){
         
         }
         메서드명(){
         
         }
      }
      json형 객체..
      var obj = {속성:속성값, 속성2:속성값2,메서드명:function(){}}
      obj.속성 = "할당"
      obj.메서드명(); // 기능메서드 호출 사용..
	6. 예외처리
		exception 예외처리
	7. DOM객체(화면에서 요소 태그 객체)
	    DOM은 document, 웹 문서에 대한 제어와 변경
	    
	    1) js의 실행 순서(메모리 로딩 순서) :  위에서부터 아래로 body태그에 있는
	    								태그를 객체화 해서 인식하려면
	    								- 태그 선언 후, 하단에서 script안에서 아래형식의 DOM객체를 선언해서 호출.
	    									<h2>안녕</h2>
	    									var h20Obj = document.querySelector("h2");
	    	-이벤트 핸들러 선언되어 핸들러 함수를 통해서 호출하는 내용
	    		function call(){
	    		var idObj = document.querySelector("id")
	    		idObj.value="아이디입니다."
	    		}
	    		<h2 onclick ="call()>클릭해보세요</h2>
	    		<input name="id">
	    
	    var 객체명 =document.querySelector("선택자");
	    객체명.속성 = "속성값";
	    var 배열명 = document.querySelectorAll("선택자");
	    배열명[0].속성 ="속성값";
	    2) 속성
	    	.innerText : 해당 객체에 출력한 내용
	    	.innerHTML : 해당 객체에 태그로 랜더링해 출력할 내용
	    	.src = "img01.jpg"
	    	.align = "center" 기본속성으로 지원하는 속성값
	    	.width = "200px"
	    
	    #css속성 설정
	    .style.속성 = "속성값"
	    .style.color="red"
	    .style.border="1px solid blue"
	    .style.textAlign="center"
	    	css속성에 -(구분자)로된 속성은 camel case(낙타모양 구분자)
	    	를 통해서 js에서는  대문자로 변경하여 처리된다. {text-align:center;}
	    .style.backgroundColor="blue"
	    
	    ps)선택자는 css의 선택자 유형을 다 활용할 수 있다. #아이디명, .클래스명,태그명부터
	    	시작해서 , 복합유형, 가상클래스 선언형 등등 사용할 수 있다.
	    var body = document.body
	    var forms =document.forms // for 요소 객체는 
	8. BOM객체(frame이나 window형 객체)
		BOM은 window 속성에 속하여 document가 아닌 window를 제어를 합니다.
		var win01=window.open("","",""); 브라우저 창을 기준으로 처리
		var frame01 = document.querySelector("#frame01");
	9. 이벤트 처리
		function call(){ //이벤트 핸들러 함수
		
		}
		<h1 onclick="call()"
			on이벤트명
		//DOM에 속성으로 이벤트를 선언하고 해당 이벤트가 수행될 때, 함수를 할당 처리..
		dom객체.onclick=function(){}
   10. 기타 api
   		쿠키, 웹스트로지, 구글 api 등등.
   11. ajax 처리
   		서버단과 비동기 연계하여 처리하는 ajax처리
   12. jquery
   		
   13. vue