#JSP 지식 계열화
	1. 서브단 프로그램의 처리 순서에 대한 이해
		1) URL호출
		2) 서버단 안에 처리
			html+java ==> html ==> 클라이언트 전달
			jsp ==> serlvet java ==> class ==> html 클라이언트 전달
		
		3)에러트래킹
			웹서버와 연동되어 있는 jsp는 서버의 데몬의 로그 내용을
			하단의 comsole로 확인할 수 있다.
			log()
			system.out.println()
			을 통해서 현재 서버프로그램의 내부적인 프로세스를 확인 할 수 있다.
			해당 로그인 라인 내뇽ㅇ의 메세지를 토앻서 에러를 확인하고 소스를 변경처리
			 - 위 log()등 출력 메서드와 에러라인, 에러메시지를 통해서 문제를 확인하고
			 처리 할 수 있다로고 합니다.
	
	2. jsp 기초 문법
		1) jsp의 화면 구성 : 페이지 지시자 + 스크립트
		2) 스크립트에 대한 이해와 활용
			- 선언(declare) : <%! %>
			- scriptlet : <% %>
			- 표현(expression) : <%=%>
		3) jsp의 기본 제어문
			- 조건문
			- 반복문
	
	3. 지시자와 태그
		1) jsp의 지시자 
			page
			include
		2) 액션 태그
	
	4. jsp의 내장 객체
		1) 내부 객체
			-요청과 반응처리
				request
					브라우저 화면에서 전송되는 데이터를 처리해주는 객체..
					request.getParameter("요청키")
					request.getParameterValue("다중의 키")
					ex) ?name=himan&price =1000&price=2000
					String name = request.getParameter("name");
					String []price = request.getParameter("price");
					if
					
					ex) ?price=3000&cnt=2
					ex) ?price=&cnt=: 서버에서 이렇게 안받게 처리..
					String priceS=request.getParameter("price")
					int price=0;
					if(price!=null && !price.trim().equals("")){
						try{
						price=Integer.parseInt(priceS)
						}catch(Exception e){
							log("예외발생"+e.getMessage());
						}
					}
					//하단의 js처리하면 
					int price = Integer.parseInt(request.getParameter("price"));
					
					
					function send(){
					   var price = document.querySelector("[name=price]");
					   var pVal = price.value
					   //isNaN("이십오") ==> true 숫자형이 아닐때,
					   if(pVal.trim()==""||isNaN(pVal) ){
					    alert("해당 내용이 공백이거나 숫자가 아닙니다.");
					    price.focus();
					    return;
					   }
					}
				response
			- session scope번위
				pageContext, session, session, application
			-예외 처리(exception)
	
	5. 자반 bean활용하기
	6. session 과 cookie
	7. el과 jstl
	8. MVC
		1) servlet이란?
		2) Model/View/Controller
	9. Database연동